<form style="padding-top:1%; padding-bottom:1%;" class="col-md-6">
    <h4 data-bind="text: CompleteName"></h4>
    <div class="form-group row">
        <label class="col-md-3">Nombre</label>
        <input id="Name" type="text" class="form-control col-md-8" data-bind="value: Names , valueUpdate: 'afterkeydown'" />
    </div>
    <div class="form-group row">
        <label class="col-md-3">Apellido</label>
        <input id="LastName" type="text" class="form-control col-md-8" data-bind="value: LastNames , valueUpdate: 'afterkeydown'"/>
    </div>
    <div class="form-group row">
        <label class="col-md-3">Login</label>
        <input id="Login" type="text" class="form-control col-md-8" data-bind="value: Login" />
    </div>
    <div class="form-group row">
        <label class="col-md-3">Email</label>
        <input id="Email" type="text" class="form-control col-md-8" data-bind="value: Email" />
    </div>
    <div class="form-group row">
        <label class="col-md-3">Password</label>
        <input id="Password" type="password" class="form-control col-md-8" data-bind="value: Password" />
    </div>
</form>
<div style="padding:2%;">
    <button class="btn btn-primary" data-bind="click :  SaveUser"> Registrar Usuario</button>
</div>




<div class="col-md-12">
    <table class="table col-md-8 table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Nombre Completo</th>
                <th>Login</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody id="CuerpoDeLaTabla"></tbody>
    </table>
</div>

<script>
    function UserViewModel() {
        var self = this;
        self.Names = ko.observable('');
        self.LastNames = ko.observable('');
        self.Login = ko.observable('');
        self.Email = ko.observable('');
        self.Password = ko.observable('');
        self.UserList = ko.observableArray([]);
        self.UserTable = createUserTable();

        self.UserFormToJson =  () => {
            return {
                "Names": self.Names(),
                "LastNames": self.LastNames(),
                "Login": self.Login(),
                "Email": self.Email(),
                "Password": self.Password()
            }
        };

        self.ClearForm = () => {
            self.Names('');
            self.LastNames('');
            self.Login('');
            self.Email('');
            self.Password('');
        };

        self.CompleteName = ko.computed(() => {
            var name = self.Names() ? self.Names() : '';
            var lastName = self.LastNames() ? self.LastNames() : '';
            return name + " "+lastName;
        })

        self.Names.subscribe(() => {
            console.log(userViewModel.Names());
        });

        self.LoadUserFromServer = () => {
            $.get('/api/user/list')
                .then(userList => {
                    self.UserList(userList);
                })
        }

        self.UserList.subscribe(() => {
            self.UserTable.clear();
            self.UserList().forEach(user => {
                AddUserToTable(user);
            });
            self.UserTable.draw();
        });

        self.SaveUser = () => {
            $.post('/api/user/create', self.UserFormToJson())
                .then(registeredUser => {
                    self.UserList.push(registeredUser);
                    self.ClearForm();
                });
        };

        function createUserTable() {
            return $('table').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ]
            });
        }

        function AddUserToTable(userData) {
            self.UserTable.row.add([userData.Id, userData.CompleteName, userData.Login, userData.Email]);
        }

        return this;
    }
    var userViewModel = new UserViewModel();
    ko.applyBindings(userViewModel);
    userViewModel.LoadUserFromServer();
</script>