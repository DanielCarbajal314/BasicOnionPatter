<form style="padding-top:1%; padding-bottom:1%;" class="col-md-6">
    <div class="form-group row">
        <label class="col-md-3">Nombre</label>
        <input id="Name" type="text" class="form-control col-md-8" data-bind="value: Names" />
    </div>
    <div class="form-group row">
        <label class="col-md-3">Apellido</label>
        <input id="LastName" type="text" class="form-control col-md-8" data-bind="value: LastNames"/>
    </div>
    <div class="form-group row">
        <label class="col-md-3">Login</label>
        <input id="Login" type="text" class="form-control col-md-8" data-bind="value: Login" />
    </div>
    <div class="form-group row">
        <label class="col-md-3">Email</label>
        <input id="Email" type="text" class="form-control col-md-8" data-bind="value: Email" />
    </div>
    <div class="form-group row">
        <label class="col-md-3">Password</label>
        <input id="Password" type="password" class="form-control col-md-8" data-bind="value: Password" />
    </div>
</form>
<div style="padding:2%;">
    <button class="btn btn-primary" id="SaveUser"> Registrar Usuario</button>
</div>




<div class="col-md-12">
    <table class="table col-md-8 table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Nombre Completo</th>
                <th>Login</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody id="CuerpoDeLaTabla"></tbody>
    </table>
</div>

<script>
    function UserViewModel() {
        var self = this;
        self.Names = ko.observable();
        self.LastNames = ko.observable();
        self.Login = ko.observable();
        self.Email = ko.observable();
        self.Password = ko.observable();

        self.UserFormToJson = function () {
            return {
                "Names": self.Names(),
                "LastNames": self.LastNames(),
                "Login": self.Login(),
                "Email": self.Email(),
                "Password": self.Password()
            }
        };

        self.ClearForm = function () {
            self.Names('');
            self.LastNames('');
            self.Login('');
            self.Email('');
            self.Password('');
        };

        return this;
    }

    var userViewModel = new UserViewModel();
    ko.applyBindings(userViewModel);


    function CreateUserTable() {
        return $('table').DataTable({
            dom: 'Bfrtip',
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print'
            ]
        });
    }

    var userTable = CreateUserTable();

    function ListUserFromServer() {
        $.get('/api/user/list')
            .then(userList => {
                userList.forEach(user => {
                    AddUserToTable(user);
                });
                userTable.draw();
            });
    }

    $('#SaveUser').click(() => {
        var newUserData = getUserData();
        $.post('/api/user/create', newUserData)
            .then(registeredUser => {
                AddUserToTable(registeredUser)
                userTable.draw();
                eraseUserData();
            });
    });

    function getUserData() {
        return {
            "Names": $('#Name').val(),
            "LastNames": $('#LastName').val(),
            "Login": $('#Login').val(),
            "Email": $('#Email').val(),
            "Password": $('#Password').val()             
        }
    }

    function eraseUserData() {
        $('#Name').val('');
        $('#LastName').val('');
        $('#Login').val('');
        $('#Email').val('');
        $('#Password').val('');
    }

    function AddUserToTable(userData) {
        userTable.row.add([userData.Id, userData.CompleteName, userData.Login, userData.Email]);
    }

    ListUserFromServer();

    userTable.on('click', 'tr', () => {
        var data = userTable.row(this).data();
        console.log(data);
    });

    function UpdateTable(){
        userTable.clear();
        ListUserFromServer();
    }
</script>